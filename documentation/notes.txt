------------------------------------
Geant 4 Release 11 Installation Tip
------------------------------------

Follow the instructions for installing/building from source:

1. get the source .tar file:  https://geant4.web.cern.ch/support/download

2. follow the instructions from: https://geant4-userdoc.web.cern.ch/UsersGuides/InstallationGuide/fo/Geant4InstallationGuide.pdf
(starting on page 8, "2.6.2 Building and Installing froms Source")


* When building GEANT4,  you might encounter the error along the lines (like I did):

CMake Error at cmake/Modules/G4CMakeMain.cmake:83 (message):
Geant4Py only supports 'global-dynamic' thread local storage

If so, then try to build with these flags:

-DGEANT4_USE_PYTHON=ON
-DGEANT4_BUILD_MULTITHREADED=ON
-DGEANT4_BUILD_TLS_MODEL=global-dynamic

#visualization options
-DGEANT4_USE_OPENGL_X11=ON
-DGEANT4_USE_QT=ON
-DGEANT4_USE_RAYTRACER_X11=ON
-DGEANT4_USE_XM=ON
-DGEANT4_USE_TOOLSSG=X11 or XT or QT
-DGEANT4_USE_INVENTOR_QT=ON
so for example, you might do: 
cmake -DGEANT4_USE_PYTHON=ON -DGEANT4_BUILD_MULTITHREADED=ON -DGEANT4_BUILD_TLS_MODEL=global-dynamic -DCMAKE_INSTALL_PREFIX=/path/to/geant4-v11.0.0-install /path/to/geant4-v11.0.0

or

cmake -DGEANT4_USE_PYTHON=ON -DGEANT4_BUILD_MULTITHREADED=ON -DGEANT4_BUILD_TLS_MODEL=global-dynamic -DGEANT4_USE_OPENGL_X11=ON  -DGEANT4_USE_QT=ON -DGEANT4_USE_INVENTOR_QT=ON -DGEANT4_USE_RAYTRACER_X11=ON -DGEANT4_USE_XM=ON -DGEANT4_USE_TOOLSSG=QT -DCMAKE_INSTALL_PREFIX=~/geant4-source/geant4-v11.0.1-install ~/geant4-source/geant4-v11.0.1/

reference: (https://geant4-forum.web.cern.ch/t/could-i-build-geant4-with-mt-and-python-option-together/3145/2)

---------------------------------------------
Geant 4 Release 11 Doing first basic example
---------------------------------------------


Under subdirectory: examples/,  there are various README files
The "README.HowToRun" actually guides you thru the steps to running a generic example

There is also the document: https://geant4-userdoc.web.cern.ch/UsersGuides/ForApplicationDeveloper/fo/BookForApplicationDevelopers.pdf
On this document, go to page 36, and follow the: "Building ExampleB1 with CMake on Unix with Makefiles"

Once you get to the executable part: ./exampleB1,  you might encounter an error, where it says it might be missing setting some environment variables
This is beacuse you need to source geant4.sh first (nobody said anything about this, but . . ..  agh)
So, go to the geant4-install directory (that was created when building geant), and there should be /bin/ directory containng the geant4.csh or geant4.sh files
so one of these need to be source, which actually defines the geant4 environment variables needed to run properly (so do source geant4.sh), and then the example
should run fine.
Later on, it might be better to put the source geant4.sh command in your shell script (either bash, zshrc, etc.), so that you don't have to do it every time




-------------------------------------
TIP for getting visualization graphics
-------------------------------------
When I run ./exampleB1 I get:
assertion failed: (pthreadret == 0), function _xcb_in_wake_up_next_reader, file xcb_in.c, line 926

I found something helpful in reference:
https://geant4-forum.web.cern.ch/t/g4openglxviewer-problem-with-macos-catalina/2967/11
-- Found X11: /opt/miniconda3/include   
-- Found XQuartzGL: /usr/X11R6/include   (X11 -> ../private/var/select/X11, X11R6 -> ../private/var/select/X11)
(I have not been able to do this myslef)


--------------------
What worked for me:
--------------------
For getting a visual of Geant4 exampleB1, what worked for me was using RayTracer program in the vis.mac macro

For example, put in the vis.mac macro:

# Use this open statement to create a .jpeg file
/vis/open RayTracer
#
. . . and make sure that at the end this line is un-commented out
# For file-based drivers, use this to create an empty detector view:
/vis/viewer/flush




-----------------------
** I STILL NEED TO FIGURE OUT HOW TO USE OPEN-GL 
-----------------------
After installing Qt5 visual driver: brew install qt@5
and using the flag: -DGEANT4_USE_QT=ON and -DGEANT4_USE_TOOLSSG=QT (in addition to the other flags above-mentioned)
during the cmake building process of geant, I was able to get an interactive display working
